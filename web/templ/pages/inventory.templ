package pages

import "dqix/internal/types"
import "dqix/web/templ/components/base"
import "dqix/web/templ/components/links"
import "strings"
import "dqix/web/templ/utilities"

// Inventory Classifications

templ InventoryClassificationPage(class string, inventories []types.Inventory) {
	@base.Layout("DQIX | " + strings.Title(class), class) {
		@InventoryClassificationContent(class, inventories)
	}
}

templ InventoryClassificationContentWithSideNav(class string, inventories []types.Inventory) {
	@base.MainContentWithSidenav(class) {
		@InventoryClassificationContent(class, inventories)
	}
}

templ InventoryClassificationContent(class string, inventories []types.Inventory) {
	<div>
		<h1 class="text-3xl font-bold">{ strings.Title(strings.ReplaceAll(class, "-", " ")) }</h1>
		<ul hx-boost="true" hx-target="#page-content" hx-swap="innerHTML">
			for _, inventory := range inventories {
				<li>
					<a href={ fn.Path("inventory", inventory.Type, inventory.Category, inventory.Classification, inventory.ID) }>{ inventory.Title }</a>
				</li>
			}
		</ul>
	</div>
}

// Inventory

templ InventoryPage(inventory types.Inventory, getter types.IGetThingFromID) {
	@base.Layout("DQIX | " + inventory.Title, inventory.Classification) {
		@InventoryContent(inventory, getter)
	}
}

templ InventoryContentWithSideNav(inventory types.Inventory, getter types.IGetThingFromID) {
	@base.MainContentWithSidenav(inventory.Classification) {
		@InventoryContent(inventory, getter)
	}
}

templ InventoryContent(inventory types.Inventory, getter types.IGetThingFromID) {
	<div>
		<h1>{ inventory.Title }</h1>
		if len(inventory.IngredientFor) > 0 {
			<ul>
				for _, id := range inventory.IngredientFor {
					<li class="text-sm text-blue-600 [&>*]:data-[not-found=true]:text-gray-400">
						@links.ThingLink(id, getter)
					</li>
				}
			</ul>
		}
	</div>
}
