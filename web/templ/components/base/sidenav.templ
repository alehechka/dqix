package base

import "dqix/internal/types"

import fn "dqix/web/templ/utilities"

templ SideNav(page string) {
	<aside
		id="sidenav"
		hx-boost="true"
		hx-target="#sidenav-page-wrapper"
		hx-swap="outerHTML"
		class="fixed -right-[--sidenav-width] md:right-0 top-16 p-2 overflow-y-auto
				z-40 h-[calc(100%-var(--navbar-height))] w-[--sidenav-width]
				bg-gray-50 dark:bg-zinc-900
				transition-[right] duration-300 aria-expanded:right-0"
	>
		<ul class="flex flex-col gap-1 overflow-x-hidden border-l-[1px] border-gray-300">
			<li>
				<details
					class="pl-2"
					if types.IsMonster(page) {
						open
					}
				>
					<summary>Monster Families</summary>
					<ul class="flex flex-col gap-1 overflow-x-hidden">
						@sideNavLink("???", fn.Path("monsters", types.FamilyUnknown), page == types.FamilyUnknown)
						@sideNavLink("Aquatic", fn.Path("monsters", types.FamilyAquatic), page == types.FamilyAquatic)
						@sideNavLink("Beast", fn.Path("monsters", types.FamilyBeast), page == types.FamilyBeast)
						@sideNavLink("Bird", fn.Path("monsters", types.FamilyBird), page == types.FamilyBird)
						@sideNavLink("Bug", fn.Path("monsters", types.FamilyBug), page == types.FamilyBug)
						@sideNavLink("Demon", fn.Path("monsters", types.FamilyDemon), page == types.FamilyDemon)
						@sideNavLink("Dragon", fn.Path("monsters", types.FamilyDragon), page == types.FamilyDragon)
						@sideNavLink("Elemental", fn.Path("monsters", types.FamilyElemental), page == types.FamilyElemental)
						@sideNavLink("Humanoid", fn.Path("monsters", types.FamilyHumanoid), page == types.FamilyHumanoid)
						@sideNavLink("Machine", fn.Path("monsters", types.FamilyMachine), page == types.FamilyMachine)
						@sideNavLink("Material", fn.Path("monsters", types.FamilyMaterial), page == types.FamilyMaterial)
						@sideNavLink("Plant", fn.Path("monsters", types.FamilyPlant), page == types.FamilyPlant)
						@sideNavLink("Slime", fn.Path("monsters", types.FamilySlime), page == types.FamilySlime)
						@sideNavLink("Undead", fn.Path("monsters", types.FamilyUndead), page == types.FamilyUndead)
						@sideNavLink("Zombie", fn.Path("monsters", types.FamilyZombie), page == types.FamilyZombie)
					</ul>
				</details>
			</li>
			<hr/>
			<li>
				<details
					class="pl-2"
					if types.IsItem(page) {
						open
					}
				>
					<summary>Items</summary>
					<ul class="flex flex-col gap-1 overflow-x-hidden">
						@sideNavLink("Everyday", fn.Path("inventory", "bag", "items", types.ClassItemEveryday), page == types.ClassItemEveryday)
						@sideNavLink("Important", fn.Path("inventory", "bag", "items", types.ClassItemImportant), page == types.ClassItemImportant)
					</ul>
				</details>
			</li>
			<li>
				<details
					class="pl-2"
					if types.IsArmor(page) {
						open
					}
				>
					<summary>Armor</summary>
					<ul class="flex flex-col gap-1 overflow-x-hidden">
						@sideNavLink("Head", fn.Path("inventory", "equipment", "armor", types.ClassArmorHead), page == types.ClassArmorHead)
						@sideNavLink("Torso", fn.Path("inventory", "equipment", "armor", types.ClassArmorTorso), page == types.ClassArmorTorso)
						@sideNavLink("Shields", fn.Path("inventory", "equipment", "armor", types.ClassArmorShield), page == types.ClassArmorShield)
						@sideNavLink("Arms", fn.Path("inventory", "equipment", "armor", types.ClassArmorArms), page == types.ClassArmorArms)
						@sideNavLink("Legs", fn.Path("inventory", "equipment", "armor", types.ClassArmorLegs), page == types.ClassArmorLegs)
						@sideNavLink("Feet", fn.Path("inventory", "equipment", "armor", types.ClassArmorFeet), page == types.ClassArmorFeet)
					</ul>
				</details>
			</li>
			<li>
				<details
					class="pl-2"
					if types.IsWeapon(page) {
						open
					}
				>
					<summary>Weapons</summary>
					<ul class="flex flex-col gap-1 overflow-x-hidden">
						@sideNavLink("Axes", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponAxe), page == types.ClassWeaponAxe)
						@sideNavLink("Boomerangs", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponBoomerang), page == types.ClassWeaponBoomerang)
						@sideNavLink("Bows", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponBow), page == types.ClassWeaponBow)
						@sideNavLink("Claws", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponClaw), page == types.ClassWeaponClaw)
						@sideNavLink("Fans", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponFan), page == types.ClassWeaponFan)
						@sideNavLink("Hammers", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponHammer), page == types.ClassWeaponHammer)
						@sideNavLink("Knives", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponKnife), page == types.ClassWeaponKnife)
						@sideNavLink("Spears", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponSpear), page == types.ClassWeaponSpear)
						@sideNavLink("Staves", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponStave), page == types.ClassWeaponStave)
						@sideNavLink("Swords", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponSword), page == types.ClassWeaponSword)
						@sideNavLink("Wands", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponWand), page == types.ClassWeaponWand)
						@sideNavLink("Whips", fn.Path("inventory", "equipment", "weapons", types.ClassWeaponWhip), page == types.ClassWeaponWhip)
					</ul>
				</details>
			</li>
			<li>
				@sideNavLink("Accessories", fn.Path("inventory", "equipment", "armor", types.ClassAccessories), page == types.ClassAccessories)
			</li>
		</ul>
	</aside>
}

templ sideNavLink(text string, href templ.SafeURL, isActive bool) {
	<li>
		<a
			href={ href }
			if isActive {
				aria-current="page"
			}
			class="flex flex-row items-center gap-2 dark:text-gray-300
					rounded p-2 text-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600
					aria-[current='page']:bg-blue-100 aria-[current='page']:bg-opacity-70 
					aria-[current='page']:text-blue-700 
					hover:aria-[current='page']:bg-opacity-100
					dark:aria-[current='page']:bg-gray-700 
					dark:aria-[current='page']:text-yellow-400 
					dark:hover:aria-[current='page']:bg-gray-600"
		>
			<span>{ text }</span>
		</a>
	</li>
}

script sidenavScriptUtils() {
	const sm = window.matchMedia('(min-width: 640px)');

	function sidenav() {
		return document.getElementById('sidenav');
	}

	function closeSidenav(e) {
		if (e.matches) {
			sidenav().setAttribute('aria-expanded', 'false');
		}
	}

	sm.addEventListener('change', closeSidenav);
}
